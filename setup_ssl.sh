#!/bin/bash

# Script para configurar SSL con Let's Encrypt en Digital Ocean
# Versi√≥n: 1.0

set -e

# Colores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar si tenemos un dominio
if [ $# -eq 0 ]; then
    print_error "Uso: $0 <tu-dominio.com>"
    echo "Ejemplo: $0 nemesix.com"
    exit 1
fi

DOMAIN=$1
EMAIL="admin@$DOMAIN"

print_status "üîí Configurando SSL para $DOMAIN"

# Paso 1: Verificar que Nginx est√© funcionando
print_status "Verificando configuraci√≥n de Nginx..."
if ! sudo systemctl is-active --quiet nginx; then
    print_error "Nginx no est√° corriendo. Ejecuta primero el despliegue principal."
    exit 1
fi

# Paso 2: Instalar certbot si no est√° instalado
if ! command -v certbot &> /dev/null; then
    print_status "Instalando Certbot..."
    sudo apt update
    sudo apt install -y certbot python3-certbot-nginx
fi

# Paso 3: Obtener certificado SSL
print_status "Obteniendo certificado SSL de Let's Encrypt..."
sudo certbot --nginx -d $DOMAIN -d www.$DOMAIN --email $EMAIL --agree-tos --non-interactive

if [ $? -eq 0 ]; then
    print_success "‚úÖ Certificado SSL obtenido exitosamente"
else
    print_error "‚ùå Error al obtener el certificado SSL"
    exit 1
fi

# Paso 4: Verificar renovaci√≥n autom√°tica
print_status "Verificando renovaci√≥n autom√°tica..."
sudo certbot renew --dry-run

if [ $? -eq 0 ]; then
    print_success "‚úÖ Renovaci√≥n autom√°tica configurada correctamente"
else
    print_warning "‚ö†Ô∏è  Puede haber un problema con la renovaci√≥n autom√°tica"
fi

# Paso 5: Configurar redirecci√≥n HTTP a HTTPS
print_status "Configurando redirecci√≥n HTTPS..."
sudo tee /etc/nginx/sites-available/nemesix-redirect > /dev/null <<EOF
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;
    return 301 https://\$server_name\$request_uri;
}
EOF

# Paso 6: Actualizar configuraci√≥n principal de Nginx
print_status "Actualizando configuraci√≥n de Nginx..."

# Backup de la configuraci√≥n actual
sudo cp /etc/nginx/sites-available/nemesix /etc/nginx/sites-available/nemesix.backup

# Actualizar configuraci√≥n para forzar HTTPS
sudo tee /etc/nginx/sites-available/nemesix > /dev/null <<EOF
# Configuraci√≥n de Nginx para Nemesix con SSL
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;
    return 301 https://\$server_name\$request_uri;
}

server {
    listen 443 ssl http2;
    server_name $DOMAIN www.$DOMAIN;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Logs
    access_log /var/log/nginx/nemesix_access.log;
    error_log /var/log/nginx/nemesix_error.log;

    # Configuraci√≥n de archivos est√°ticos
    location /static {
        alias /var/www/nemesix/static;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Configuraci√≥n del proxy para la aplicaci√≥n Flask
    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;

        # Configuraci√≥n de timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Configuraci√≥n de buffers
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Configuraci√≥n de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
}
EOF

# Paso 7: Probar y recargar Nginx
print_status "Probando configuraci√≥n de Nginx..."
sudo nginx -t

if [ $? -eq 0 ]; then
    sudo systemctl reload nginx
    print_success "‚úÖ Nginx configurado con SSL correctamente"
else
    print_error "‚ùå Error en configuraci√≥n de Nginx"
    # Restaurar backup
    sudo cp /etc/nginx/sites-available/nemesix.backup /etc/nginx/sites-available/nemesix
    sudo systemctl reload nginx
    exit 1
fi

# Paso 8: Configurar cron para renovaci√≥n autom√°tica
print_status "Configurando renovaci√≥n autom√°tica de certificados..."
sudo crontab -l | grep -q certbot || (sudo crontab -l ; echo "0 12 * * * /usr/bin/certbot renew --quiet") | sudo crontab -

print_success "üéâ ¬°SSL configurado exitosamente!"
echo ""
echo "üìã Informaci√≥n importante:"
echo "   üîí URL segura: https://$DOMAIN"
echo "   üîí URL www: https://www.$DOMAIN"
echo "   üìÖ Renovaci√≥n autom√°tica: Todos los d√≠as a las 12:00"
echo "   üìÑ Certificados: /etc/letsencrypt/live/$DOMAIN/"
echo ""
print_status "üí° Comandos √∫tiles:"
echo "   Verificar certificado: sudo certbot certificates"
echo "   Renovar manualmente: sudo certbot renew"
echo "   Ver logs de renovaci√≥n: sudo journalctl -u certbot"
echo ""
print_warning "‚ö†Ô∏è  Recuerda:"
echo "   - Los certificados se renuevan autom√°ticamente"
echo "   - Nginx se recarga autom√°ticamente despu√©s de la renovaci√≥n"
echo "   - Revisa los logs si hay problemas"

# Verificaci√≥n final
print_status "üîç Verificando configuraci√≥n SSL..."
if curl -I https://$DOMAIN | grep -q "HTTP/2 200"; then
    print_success "‚úÖ SSL funcionando correctamente en https://$DOMAIN"
else
    print_warning "‚ö†Ô∏è  Puede haber un problema con la configuraci√≥n SSL"
    echo "Revisa: sudo nginx -t && sudo systemctl status nginx"
fi
