#!/bin/bash

# Script de soluci√≥n r√°pida para Error 502 Bad Gateway
# Versi√≥n: 1.0
# Fecha: 28 de agosto de 2025

set -e

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

print_header() {
    echo -e "\n${PURPLE}================================${NC}"
    echo -e "${PURPLE}$1${NC}"
    echo -e "${PURPLE}================================${NC}"
}

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo -e "${CYAN}üîß SOLUCI√ìN R√ÅPIDA PARA ERROR 502 BAD GATEWAY${NC}"
echo -e "${CYAN}=================================================${NC}"
echo ""

# Funci√≥n para verificar conectividad
check_connectivity() {
    local host=$1
    local port=$2
    local timeout=${3:-5}

    if command -v nc >/dev/null 2>&1; then
        if nc -z -w$timeout $host $port >/dev/null 2>&1; then
            return 0
        fi
    elif command -v timeout >/dev/null 2>&1 && command -v bash >/dev/null 2>&1; then
        if timeout $timeout bash -c "echo >/dev/tcp/$host/$port" >/dev/null 2>&1; then
            return 0
        fi
    fi
    return 1
}

# 1. Verificar estado actual
print_header "1. VERIFICACI√ìN DEL ESTADO ACTUAL"

echo "Verificando servicios..."
echo -n "Servicio Nemesix: "
if systemctl is-active --quiet nemesix; then
    print_success "ACTIVO"
else
    print_error "INACTIVO"
fi

echo -n "Servicio Nginx: "
if systemctl is-active --quiet nginx; then
    print_success "ACTIVO"
else
    print_error "INACTIVO"
fi

echo -n "Puerto 8080 (Gunicorn): "
if check_connectivity localhost 8080; then
    print_success "CONECTADO"
else
    print_error "NO CONECTADO"
fi

# 2. Soluci√≥n 1: Reiniciar servicios
print_header "2. SOLUCI√ìN 1: REINICIAR SERVICIOS"

print_status "Reiniciando servicios en orden correcto..."

echo "1. Deteniendo servicios..."
sudo systemctl stop nemesix 2>/dev/null || true
sudo systemctl stop nginx 2>/dev/null || true

echo "2. Iniciando Gunicorn (Nemesix)..."
sudo systemctl start nemesix
sleep 3

echo "3. Iniciando Nginx..."
sudo systemctl start nginx
sleep 2

# Verificar si funcion√≥
echo -n "Verificando puerto 8080: "
if check_connectivity localhost 8080; then
    print_success "¬°CONECTADO! Soluci√≥n 1 funcion√≥"
else
    print_error "A√∫n no conectado, intentando siguiente soluci√≥n..."
fi

# 3. Soluci√≥n 2: Verificar y corregir configuraci√≥n
print_header "3. SOLUCI√ìN 2: VERIFICAR CONFIGURACI√ìN"

# Verificar configuraci√≥n de Nginx
print_status "Verificando configuraci√≥n de Nginx..."
if sudo nginx -t >/dev/null 2>&1; then
    print_success "Configuraci√≥n de Nginx es v√°lida"
else
    print_error "Configuraci√≥n de Nginx inv√°lida"
    sudo nginx -t
    exit 1
fi

# Verificar archivo de configuraci√≥n del sitio
if [ -f "/etc/nginx/sites-available/nemesix" ]; then
    print_success "Archivo de configuraci√≥n existe"
else
    print_error "Archivo de configuraci√≥n no existe"
    exit 1
fi

# Verificar enlace simb√≥lico
if [ -L "/etc/nginx/sites-enabled/nemesix" ]; then
    print_success "Enlace simb√≥lico existe"
else
    print_warning "Creando enlace simb√≥lico..."
    sudo ln -sf /etc/nginx/sites-available/nemesix /etc/nginx/sites-enabled/
    sudo systemctl reload nginx
fi

# 4. Soluci√≥n 3: Reiniciar con daemon-reload
print_header "4. SOLUCI√ìN 3: RECARGAR SYSTEMD"

print_status "Recargando configuraci√≥n de systemd..."
sudo systemctl daemon-reload

print_status "Reiniciando servicios con configuraci√≥n actualizada..."
sudo systemctl restart nemesix
sleep 3
sudo systemctl restart nginx

# Verificar nuevamente
echo -n "Verificaci√≥n final del puerto 8080: "
if check_connectivity localhost 8080; then
    print_success "¬°PROBLEMA RESUELTO!"
else
    print_error "El problema persiste, revisando logs..."
fi

# 5. Soluci√≥n 4: Verificar logs y dar recomendaciones
print_header "5. VERIFICACI√ìN DE LOGS Y RECOMENDACIONES"

# Verificar logs de systemd
echo "√öltimas l√≠neas del log de Nemesix:"
sudo journalctl -u nemesix --no-pager -n 5 | sed 's/^/   /' || print_warning "No se pudieron obtener logs"

echo ""
echo "√öltimas l√≠neas del log de Nginx:"
sudo tail -5 /var/log/nginx/nemesix_error.log 2>/dev/null | sed 's/^/   /' || print_warning "No se pudieron obtener logs de Nginx"

# 6. Prueba final
print_header "6. PRUEBA FINAL"

echo "Probando conectividad HTTP:"
if command -v curl >/dev/null 2>&1; then
    echo -n "Endpoint principal: "
    response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/ 2>/dev/null)
    if [ "$response" = "200" ]; then
        print_success "OK (200) - ¬°TODO FUNCIONANDO!"
    elif [ "$response" = "502" ]; then
        print_error "A√öN ERROR 502 - Necesitas ayuda adicional"
    else
        print_warning "C√≥digo HTTP: $response"
    fi

    echo -n "Health check: "
    response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/health 2>/dev/null)
    if [ "$response" = "200" ]; then
        print_success "OK (200)"
    else
        print_warning "C√≥digo HTTP: $response"
    fi
else
    print_warning "curl no disponible para pruebas HTTP"
fi

# 7. Recomendaciones finales
print_header "7. RECOMENDACIONES FINALES"

if check_connectivity localhost 8080 && systemctl is-active --quiet nemesix && systemctl is-active --quiet nginx; then
    print_success "üéâ ¬°PROBLEMA RESUELTO EXITOSAMENTE!"
    echo ""
    echo "Tu aplicaci√≥n Nemesix deber√≠a estar funcionando correctamente."
    echo "Accede a: http://tu-ip-del-droplet"
else
    print_error "‚ùå El problema no se pudo resolver autom√°ticamente"
    echo ""
    echo "üîß Pasos manuales recomendados:"
    echo "1. Ejecuta el diagn√≥stico completo: ./diagnose.sh"
    echo "2. Revisa los logs detallados: sudo journalctl -u nemesix -f"
    echo "3. Verifica la configuraci√≥n de Gunicorn"
    echo "4. Comprueba los permisos de archivos"
    echo ""
    echo "üí° Si necesitas ayuda adicional, comparte la salida del diagn√≥stico."
fi

echo ""
print_status "Comandos √∫tiles para monitoreo:"
echo "   Ver estado: sudo systemctl status nemesix"
echo "   Ver logs: sudo journalctl -u nemesix -f"
echo "   Reiniciar: sudo systemctl restart nemesix nginx"
echo "   Probar: curl http://localhost/health"
